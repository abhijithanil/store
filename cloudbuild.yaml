steps:
  # =============================================================================
  # == 1. Run Unit & Integration Tests                                         ==
  # =============================================================================
  - name: 'gradle:8.5-jdk17-alpine'
    id: Run-Tests
    entrypoint: './gradlew'
    args: ['test', 'jacocoTestReport']
    waitFor: ['-']

  # =============================================================================
  # == 2. Build the Application JAR                                            ==
  # =============================================================================
  - name: 'gradle:8.5-jdk17-alpine'
    id: Build-Application
    entrypoint: './gradlew'
    args: ['build', '-x', 'test', '--no-daemon']
    waitFor:
      - Run-Tests

  # =============================================================================
  # == 3. Retrieve Docker Hub Password from Secret Manager                     ==
  # =============================================================================
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Get-Docker-Password
    entrypoint: 'gcloud'
    args:
      - 'secrets'
      - 'versions'
      - 'access'
      - 'latest'
      - '--secret=dockerhub-password'
      - '--project=inspire26'
      - '--format=get(payload.data)'
      - '|'
      - 'tr'
      - '_-'
      - '/+'
      - '|'
      - 'base64'
      - '-d'
      - '>'
      - '/workspace/docker-password.txt'
    waitFor:
      - Build-Application

  # =============================================================================
  # == 4. Login to Docker Hub                                                  ==
  # =============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: Docker-Login
    entrypoint: 'sh'
    args:
      - '-c'
      - 'docker login -u="aa061872" --password-stdin < /workspace/docker-password.txt'
    waitFor:
      - Get-Docker-Password

  # =============================================================================
  # == 5. Build Docker Image                                                   ==
  # =============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: Build-Docker-Image
    args:
      - 'build'
      - '-t'
      - 'aa061872/store-app:$COMMIT_SHA'
      - '.'
    waitFor:
      - Docker-Login

  # =============================================================================
  # == 6. Push Docker Image to Docker Hub                                      ==
  # =============================================================================
  - name: 'gcr.io/cloud-builders/docker'
    id: Push-Docker-Image
    args:
      - 'push'
      - 'aa061872/store-app:$COMMIT_SHA'
    waitFor:
      - Build-Docker-Image

# =============================================================================
# == Optional: Specify artifacts to store (e.g., JaCoCo reports)             ==
# =============================================================================
artifacts:
  objects:
    location: 'gs://${_BUCKET_NAME}/jacoco/$COMMIT_SHA/'
    paths: ['build/reports/jacoco/test/html/**']